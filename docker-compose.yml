version: "3.8"

services:
  postgres:
    image: postgres:16.0
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: admin
    volumes:
      - data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:8
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@quiz.ru
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  backend:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      DB_HOST: postgres

  grafana:
    image: grafana/grafana:8.5.3
    ports:
      - "3000:3000"
    environment:
      PASSWORD: grafana_admin
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-configs:/etc/grafana

  prometheus:
    build:
      context: monitoring/prometheus
    ports:
      - "9090:9090"
    volumes:
      - prom-data:/prometheus
      - prom-configs:/etc/prometheus
  postgres-exporter:
    image: bitnami/postgres-exporter:0.15.0
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:admin@postgres:5432/QuizzSite?sslmode=disable"
    links:
      - postgres
  node-exporter:
    image: prom/node-exporter:v1.3.1
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude"
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

volumes:
  grafana-data:
  grafana-configs:
  prom-data:
  prom-configs:
  data:
  pgadmin-data:
